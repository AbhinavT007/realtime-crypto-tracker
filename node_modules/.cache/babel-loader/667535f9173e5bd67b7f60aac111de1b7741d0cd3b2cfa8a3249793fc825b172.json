{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  assets: [{\n    id: 'bitcoin',\n    name: 'Bitcoin',\n    symbol: 'BTC',\n    logo: '/images/bitcoin.png',\n    price: 30000,\n    percent_change_1h: 0,\n    percent_change_24h: 0,\n    percent_change_7d: 0,\n    market_cap: 600000000000,\n    volume_24h: 35000000000,\n    circulating_supply: 19000000,\n    max_supply: 21000000,\n    chart: '/charts/bitcoin.svg'\n  }, {\n    id: 'ethereum',\n    name: 'Ethereum',\n    symbol: 'ETH',\n    logo: '/images/ethereum.png',\n    price: 2000,\n    percent_change_1h: 0,\n    percent_change_24h: 0,\n    percent_change_7d: 0,\n    market_cap: 250000000000,\n    volume_24h: 20000000000,\n    circulating_supply: 120000000,\n    max_supply: null,\n    chart: '/charts/ethereum.svg'\n  }, {\n    id: 'tether',\n    name: 'Tether',\n    symbol: 'USDT',\n    logo: '/images/tether.png',\n    price: 1,\n    percent_change_1h: 0,\n    percent_change_24h: 0,\n    percent_change_7d: 0,\n    market_cap: 70000000000,\n    volume_24h: 50000000000,\n    circulating_supply: 70000000000,\n    max_supply: null,\n    chart: '/charts/tether.svg'\n  }, {\n    id: 'cardano',\n    name: 'Cardano',\n    symbol: 'ADA',\n    logo: '/images/cardano.png',\n    price: 1.2,\n    percent_change_1h: 0,\n    percent_change_24h: 0,\n    percent_change_7d: 0,\n    market_cap: 40000000000,\n    volume_24h: 3000000000,\n    circulating_supply: 33000000000,\n    max_supply: 45000000000,\n    chart: '/charts/cardano.svg'\n  }, {\n    id: 'ripple',\n    name: 'Ripple',\n    symbol: 'XRP',\n    logo: '/images/ripple.png',\n    price: 0.8,\n    percent_change_1h: 0,\n    percent_change_24h: 0,\n    percent_change_7d: 0,\n    market_cap: 35000000000,\n    volume_24h: 4000000000,\n    circulating_supply: 45000000000,\n    max_supply: 100000000000,\n    chart: '/charts/ripple.svg'\n  }]\n};\nfunction getRandomChange(value, maxPercent = 5) {\n  const changePercent = (Math.random() * 2 - 1) * maxPercent;\n  return +(value * (1 + changePercent / 100)).toFixed(2);\n}\nconst assetsSlice = createSlice({\n  name: 'assets',\n  initialState,\n  reducers: {\n    updateAsset(state, action) {\n      const {\n        id,\n        price,\n        percent_change_1h,\n        percent_change_24h,\n        percent_change_7d,\n        volume_24h\n      } = action.payload;\n      const asset = state.assets.find(a => a.id === id);\n      if (asset) {\n        asset.price = price;\n        asset.percent_change_1h = percent_change_1h;\n        asset.percent_change_24h = percent_change_24h;\n        asset.percent_change_7d = percent_change_7d;\n        asset.volume_24h = volume_24h;\n      }\n    },\n    simulateUpdates(state) {\n      state.assets.forEach(asset => {\n        asset.price = getRandomChange(asset.price);\n        asset.percent_change_1h = +(Math.random() * 10 - 5).toFixed(2);\n        asset.percent_change_24h = +(Math.random() * 10 - 5).toFixed(2);\n        asset.percent_change_7d = +(Math.random() * 10 - 5).toFixed(2);\n        asset.volume_24h = getRandomChange(asset.volume_24h);\n      });\n    }\n  }\n});\nexport const {\n  updateAsset,\n  simulateUpdates\n} = assetsSlice.actions;\nexport const selectAssets = state => state.assets.assets;\nexport default assetsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","assets","id","name","symbol","logo","price","percent_change_1h","percent_change_24h","percent_change_7d","market_cap","volume_24h","circulating_supply","max_supply","chart","getRandomChange","value","maxPercent","changePercent","Math","random","toFixed","assetsSlice","reducers","updateAsset","state","action","payload","asset","find","a","simulateUpdates","forEach","actions","selectAssets","reducer"],"sources":["C:/Users/anant/OneDrive/Desktop/cryptotracker/src/features/assets/assetsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  assets: [\r\n    {\r\n      id: 'bitcoin',\r\n      name: 'Bitcoin',\r\n      symbol: 'BTC',\r\n      logo: '/images/bitcoin.png',\r\n      price: 30000,\r\n      percent_change_1h: 0,\r\n      percent_change_24h: 0,\r\n      percent_change_7d: 0,\r\n      market_cap: 600000000000,\r\n      volume_24h: 35000000000,\r\n      circulating_supply: 19000000,\r\n      max_supply: 21000000,\r\n      chart: '/charts/bitcoin.svg',\r\n    },\r\n    {\r\n      id: 'ethereum',\r\n      name: 'Ethereum',\r\n      symbol: 'ETH',\r\n      logo: '/images/ethereum.png',\r\n      price: 2000,\r\n      percent_change_1h: 0,\r\n      percent_change_24h: 0,\r\n      percent_change_7d: 0,\r\n      market_cap: 250000000000,\r\n      volume_24h: 20000000000,\r\n      circulating_supply: 120000000,\r\n      max_supply: null,\r\n      chart: '/charts/ethereum.svg',\r\n    },\r\n    {\r\n      id: 'tether',\r\n      name: 'Tether',\r\n      symbol: 'USDT',\r\n      logo: '/images/tether.png',\r\n      price: 1,\r\n      percent_change_1h: 0,\r\n      percent_change_24h: 0,\r\n      percent_change_7d: 0,\r\n      market_cap: 70000000000,\r\n      volume_24h: 50000000000,\r\n      circulating_supply: 70000000000,\r\n      max_supply: null,\r\n      chart: '/charts/tether.svg',\r\n    },\r\n    {\r\n      id: 'cardano',\r\n      name: 'Cardano',\r\n      symbol: 'ADA',\r\n      logo: '/images/cardano.png',\r\n      price: 1.2,\r\n      percent_change_1h: 0,\r\n      percent_change_24h: 0,\r\n      percent_change_7d: 0,\r\n      market_cap: 40000000000,\r\n      volume_24h: 3000000000,\r\n      circulating_supply: 33000000000,\r\n      max_supply: 45000000000,\r\n      chart: '/charts/cardano.svg',\r\n    },\r\n    {\r\n      id: 'ripple',\r\n      name: 'Ripple',\r\n      symbol: 'XRP',\r\n      logo: '/images/ripple.png',\r\n      price: 0.8,\r\n      percent_change_1h: 0,\r\n      percent_change_24h: 0,\r\n      percent_change_7d: 0,\r\n      market_cap: 35000000000,\r\n      volume_24h: 4000000000,\r\n      circulating_supply: 45000000000,\r\n      max_supply: 100000000000,\r\n      chart: '/charts/ripple.svg',\r\n    },\r\n  ],\r\n};\r\n\r\nfunction getRandomChange(value, maxPercent = 5) {\r\n  const changePercent = (Math.random() * 2 - 1) * maxPercent;\r\n  return +(value * (1 + changePercent / 100)).toFixed(2);\r\n}\r\n\r\nconst assetsSlice = createSlice({\r\n  name: 'assets',\r\n  initialState,\r\n  reducers: {\r\n    updateAsset(state, action) {\r\n      const { id, price, percent_change_1h, percent_change_24h, percent_change_7d, volume_24h } = action.payload;\r\n      const asset = state.assets.find((a) => a.id === id);\r\n      if (asset) {\r\n        asset.price = price;\r\n        asset.percent_change_1h = percent_change_1h;\r\n        asset.percent_change_24h = percent_change_24h;\r\n        asset.percent_change_7d = percent_change_7d;\r\n        asset.volume_24h = volume_24h;\r\n      }\r\n    },\r\n    simulateUpdates(state) {\r\n      state.assets.forEach((asset) => {\r\n        asset.price = getRandomChange(asset.price);\r\n        asset.percent_change_1h = +(Math.random() * 10 - 5).toFixed(2);\r\n        asset.percent_change_24h = +(Math.random() * 10 - 5).toFixed(2);\r\n        asset.percent_change_7d = +(Math.random() * 10 - 5).toFixed(2);\r\n        asset.volume_24h = getRandomChange(asset.volume_24h);\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updateAsset, simulateUpdates } = assetsSlice.actions;\r\n\r\nexport const selectAssets = (state) => state.assets.assets;\r\n\r\nexport default assetsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}